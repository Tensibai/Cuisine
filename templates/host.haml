- # ensure we don't go out of bounds
- if @config["host_nb_runs"] >= @config["results_hosts"] then
  - nb_runs = @config["results_hosts"]-1
- else
  - nb_runs = @config["host_nb_runs"]

- if @infos.count < nb_runs
  - nb_runs = @infos.count-1
%div{:class => "row" }
  %div{:class => "span10" }
    %h2
      #{@infos[0][:nodename]}

    %h3
      Various informations
    %div
      %strong
        Latest run :
      #{@infos[0][:start_time]}
    %div
      %strong
        Last run changes :
      - if @infos[0][:updated_resources].empty? then
      %span{:class => "notice label"} No resources updated
      - else
        %span
        %ul
          - @infos[0][:updated_resources].each do |resource, resource_type|
            %li
              #{resource} (#{resource_type})

    %div
      %strong
        Short history (#{@infos.count} latest runs) :
      %ul
      - for i in 0..nb_runs do
        - if @infos[i][:start_time] then
          %li
            #{@infos[i][:start_time]} |
            - |
            %a{:href => "/run/#{@infos[i][:id]}"}
              summary
    %p
    %div
      %strong
        Last runs duration, in seconds :
      %p
      %div{:id => "placeholder", :style=>"width:600px;height:300px;"}

      - graph_coords=[]
      - times=[]
      - run_ids=""
      - for i in 0..nb_runs do
        - if @infos[i][:elapsed_time] then
          - graph_coords.push "[#{(nb_runs+1)-i}, #{sprintf("%.1f",@infos[i][:elapsed_time].to_f)}]"
          - times.push sprintf("%.1f", @infos[i][:elapsed_time]).to_f
          - run_ids+="'#{(nb_runs+1)-i}': '#{@infos[i][:id]}', "
      - graph_points="[#{graph_coords.join(', ')}]"
  :javascript
    $(function () {
      var graphdata = #{graph_points};
      var run_ids = { #{run_ids} };
      $.plot($("#placeholder"), [ graphdata ], {
        series: {
          lines: { show: true },
          points: { show: true },
        },
        grid: {
          show: true,
          clickable: true,
          hoverable: true
        },
        yaxis: {
          min: #{times.min - 1},
          max: #{times.max + 1}
        },
        xaxis: {
          tickSize: 1
        }
      } );

     function showTooltip(x, y, contents) {
        $('<div id="tooltip">' + contents + '</div>').css( {
            position: 'absolute',
            display: 'none',
            top: y + 5,
            left: x + 5,
            border: '1px solid #fdd',
            padding: '2px', 'background-color': '#fee',
            opacity: 0.80
        }).appendTo("body").fadeIn(200);
    }

    var previousPoint = null;
    $("#placeholder").bind("plothover", function (event, pos, item) {
        $("#x").text(pos.x.toFixed(2));
        $("#y").text(pos.y.toFixed(2));

            if (item) {
                if (previousPoint != item.dataIndex) {
                    previousPoint = item.dataIndex;

                    $("#tooltip").remove();
                    var x = item.datapoint[0].toFixed(2),
                        y = item.datapoint[1].toFixed(2);

                    showTooltip(item.pageX, item.pageY,
                                y + " seconds");
                }
            }
            else {
                $("#tooltip").remove();
                previousPoint = null;
            }
        });

            console.log(window.location);
    $("#placeholder").bind("plotclick", function (event, pos, item) {
        if (item) {
            var x = item.datapoint[0];
            window.location="http://"+window.location.host+"/run/"+run_ids[x];
        }
    });

    });
